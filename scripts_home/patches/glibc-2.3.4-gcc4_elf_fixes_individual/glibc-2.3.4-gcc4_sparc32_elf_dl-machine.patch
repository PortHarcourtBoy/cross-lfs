Submitted By: Ryan Oliver <ryan.oliver@pha.com.au>
Date: 2005-05-03
Initial Package Version: 2.3.4
Origin: glibc cvs ( libc/sysdeps/sparc/sparc32/dl-machine.h -r1.54 )
Upstream Status: See Origin
Description:

(RO: edited changelog entry)

2005-03-15  Jakub Jelinek  <jakub@redhat.com>

        * sysdeps/sparc/sparc32/dl-machine.h (elf_machine_rela,
        elf_machine_rela_relative, elf_machine_lazy_rel):  Add always_inline
        attribute. Change static inline into auto inline.

===================================================================
RCS file: /cvs/glibc/libc/sysdeps/sparc/sparc32/dl-machine.h,v
retrieving revision 1.53
retrieving revision 1.54
diff -u -r1.53 -r1.54
--- libc/sysdeps/sparc/sparc32/dl-machine.h	2004/05/17 18:20:30	1.53
+++ libc/sysdeps/sparc/sparc32/dl-machine.h	2005/03/15 22:57:24	1.54
@@ -1,5 +1,5 @@
 /* Machine-dependent ELF dynamic relocation inline functions.  SPARC version.
-   Copyright (C) 1996-2003, 2004 Free Software Foundation, Inc.
+   Copyright (C) 1996-2003, 2004, 2005 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
    The GNU C Library is free software; you can redistribute it and/or
@@ -411,7 +411,8 @@
 /* Perform the relocation specified by RELOC and SYM (which is fully resolved).
    MAP is the object containing the reloc.  */
 
-static inline void
+auto inline void
+__attribute__ ((always_inline))
 elf_machine_rela (struct link_map *map, const Elf32_Rela *reloc,
 		  const Elf32_Sym *sym, const struct r_found_version *version,
 		  void *const reloc_addr_arg)
@@ -593,7 +594,8 @@
     }
 }
 
-static inline void
+auto inline void
+__attribute__ ((always_inline))
 elf_machine_rela_relative (Elf32_Addr l_addr, const Elf32_Rela *reloc,
 			   void *const reloc_addr_arg)
 {
@@ -601,7 +603,8 @@
   *reloc_addr += l_addr + reloc->r_addend;
 }
 
-static inline void
+auto inline void
+__attribute__ ((always_inline))
 elf_machine_lazy_rel (struct link_map *map,
 		      Elf32_Addr l_addr, const Elf32_Rela *reloc)
 {
