<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-perl" role="wrap">
  <?dbhtml filename="perl-64bit.html"?>

  <title>Perl-&perl-version; 64 Bit</title>

  <indexterm zone="ch-system-perl">
    <primary sortas="a-Perl">Perl</primary>
  </indexterm>

  <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
  href="../common/perl.xml"
  xpointer="xpointer(//*[@role='package'])"/>

  <sect2 role="installation">
    <title>Installation of Perl</title>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="../common/perl.xml"
    xpointer="xpointer(//*[@os='p1'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="../common/perl.xml"
    xpointer="xpointer(//*[@os='p2'])"/>

    <para os="p3">Perl does not, by default, know about library directories with names other
    than lib, The following patch will allow it to install to other directories:</para>

<screen os="p4"><userinput>patch -Np1 -i ../&perl-multilib-patch;</userinput></screen>

    <para os="s1">There is a further (possibly cosmetic) anomaly - if we install perl and
    then run <command>perl -V</command> it will claim that libc is in /lib.  The
    following sed fixes this, but only takes effect when <command>make install
    </command> is run:</para>

<screen os="s2"><userinput>sed -i "/libc/s@/lib@/lib64@" hints/linux.sh</userinput></screen>

    <para os="m2">We still need to tell perl to actually use lib64:</para>

<screen os="m3"><userinput>echo 'installstyle="lib64/perl5"' >>hints/linux.sh</userinput></screen>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="../common/perl.xml"
    xpointer="xpointer(//*[@os='a00'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="../common/perl.xml"
    xpointer="xpointer(//*[@os='a01'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="../common/perl.xml"
    xpointer="xpointer(//*[@os='a'])"/>

<screen os="b"><userinput>./configure.gnu --prefix=/usr \
   -Dman1dir=/usr/share/man/man1 \
   -Dman3dir=/usr/share/man/man3 \
   -Dpager="/bin/less -isR" \
   -Dlibpth="/usr/local/lib64 /lib64 /usr/lib64" \
   -Dcc="gcc ${BUILD64}" \
   -Dusethreads</userinput></screen>

    <variablelist os="m4">
      <title>The meaning of the new configure option:</title>

      <varlistentry>
        <term><parameter>-Dlibpth="/usr/local/lib64 /lib64 /usr/lib64"</parameter></term>
        <listitem>
          <para>This tells Perl to link against the 64-bit libraries.</para>
        </listitem>
      </varlistentry>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="../common/perl.xml"
    xpointer="xpointer(//*[@os='c1'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="../common/perl.xml"
    xpointer="xpointer(//*[@os='c2'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="../common/perl.xml"
    xpointer="xpointer(//*[@os='c3'])"/>

    </variablelist>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="../common/perl.xml"
    xpointer="xpointer(//*[@os='d'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="../common/perl.xml"
    xpointer="xpointer(//*[@os='e'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="../common/perl.xml"
    xpointer="xpointer(//*[@os='h'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="../common/perl.xml"
    xpointer="xpointer(//*[@os='j'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="../common/perl.xml"
    xpointer="xpointer(//*[@os='k'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="perl.xml"
    xpointer="xpointer(//*[@os='l'])"/>

<screen os="m"><userinput>mv /usr/bin/perl{,-64}</userinput></screen>

    <para os="n">Now we need to create a multilib wrapper that lets us choose
    which perl installation to use:</para>

<screen os="o"><userinput>cat &gt; perl_wrapper.c &lt;&lt; "EOF"
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;errno.h&gt;

int main (int argc, char *argv[])
{
  char *perl_arch;
  if ((perl_arch = getenv("PERL_ARCH")) == NULL)
    perl_arch = "64";

  char *filename = malloc(strlen(argv[0]) + strlen(perl_arch) + 2);
  strcpy(filename, argv[0]);
  strcat(filename, "-");
  strcat(filename, perl_arch);

  int ret = 0;
  ret = execvp(filename, argv);
  if ((ret != 0)&amp;&amp;(errno != 0))
  {
    char *errmsg = malloc(strlen(filename) + 19);
    strcpy(errmsg, "Unable to execute ");
    strcat(errmsg, filename);
    perror(errmsg);
    free(errmsg);
  }

  free(filename);

  return ret;
}
EOF
gcc ${BUILD64} perl_wrapper.c -o /usr/bin/perl</userinput></screen>

    <para os="p">This multilib wrapper makes it possible to build perl
    extensions other then 64-bit. The PERL_ARCH environment variable controls
    which perl binary to execute. Some packages that may attempt to build
    against perl will run <command>perl -V:cc</command> to get the command
    that was used to build perl. If you're building a 32-bit extension but you
    only have a 64-bit perl this is not desired. By setting PERL_ARCH=32 you
    will be able to build the 32-bit extension because
    <command>perl -V:cc</command> will return the command used to build the
    32-bit perl installation.</para>

  </sect2>

  <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
  href="../common/perl.xml"
  xpointer="xpointer(id('contents-perl'))"/>

</sect1>
