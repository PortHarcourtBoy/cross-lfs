Reported on bug-bash by Tim Waugh <twaugh@redhat.com>
http://lists.gnu.org/archive/html/bug-bash/2004-09/msg00081.html

GNU libc defines WCONTINUED, but (at least on Linux 2.4.x kernels)
waitpid() returns -1 with errno set to EINVAL if WCONTINUED is
supplied in options.

Here is a patch to retry without WCONTINUED set in that case.

--- bash-3.0/jobs.c.jobs	2004-09-08 16:07:25.081427747 +0100
+++ bash-3.0/jobs.c	2004-09-08 16:18:06.698604033 +0100
@@ -2475,6 +2475,7 @@
@@ -2471,6 +2471,7 @@
   PROCESS *child;
   pid_t pid;
   int call_set_current, last_stopped_job, job, children_exited, waitpid_flags;
+  static int wcontinued_not_supported = 0;
 
   call_set_current = children_exited = 0;
   last_stopped_job = NO_JOB;
@@ -2484,7 +2485,15 @@
 			: 0;
       if (sigchld || block == 0)
 	waitpid_flags |= WNOHANG;
+    retry:
+      if (wcontinued_not_supported)
+	waitpid_flags &= ~WCONTINUED;
       pid = WAITPID (-1, &status, waitpid_flags);
+      if (errno == EINVAL)
+	{
+	  wcontinued_not_supported = 1;
+	  goto retry;
+	}
 
       /* The check for WNOHANG is to make sure we decrement sigchld only
 	 if it was non-zero before we called waitpid. */
