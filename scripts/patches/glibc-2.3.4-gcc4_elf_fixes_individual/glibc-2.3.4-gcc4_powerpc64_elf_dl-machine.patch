Submitted By: Ryan Oliver <ryan.oliver@pha.com.au>
Date: 2005-05-03
Initial Package Version: 2.3.4
Origin: glibc cvs
Upstream Status: See Origin
Description:

(RO: Modified changelog entry)
2005-02-14  Alan Modra  <amodra@bigpond.net.au>

        * sysdeps/powerpc/powerpc64/dl-machine.h (elf_machine_rela): Likewise.
        (elf_machine_rela_relative, elf_machine_lazy_rel): Likewise.
        (elf_machine_tprel): Likewise

===================================================================
RCS file: /cvs/glibc/libc/sysdeps/powerpc/powerpc64/dl-machine.h,v
retrieving revision 1.21
retrieving revision 1.23
diff -u -r1.21 -r1.23
--- libc/sysdeps/powerpc/powerpc64/dl-machine.h	2005/01/08 07:07:01	1.21
+++ libc/sysdeps/powerpc/powerpc64/dl-machine.h	2005/02/17 01:16:34	1.23
@@ -487,7 +487,7 @@
                                 const Elf64_Sym *refsym)
                                 attribute_hidden;
 
-static inline void
+auto inline void __attribute__ ((always_inline))
 elf_machine_rela_relative (Elf64_Addr l_addr, const Elf64_Rela *reloc,
 			   void *const reloc_addr_arg)
 {
@@ -497,7 +497,7 @@
 
 #if defined USE_TLS && (!defined RTLD_BOOTSTRAP || USE___THREAD)
 /* This computes the value used by TPREL* relocs.  */
-static Elf64_Addr __attribute__ ((const))
+auto inline Elf64_Addr __attribute__ ((always_inline, const))
 elf_machine_tprel (struct link_map *map,
 		   struct link_map *sym_map,
 		   const Elf64_Sym *sym,
@@ -518,7 +518,7 @@
 
 /* Perform the relocation specified by RELOC and SYM (which is fully
    resolved).  MAP is the object containing the reloc.  */
-static inline void
+auto inline void __attribute__ ((always_inline))
 elf_machine_rela (struct link_map *map,
 		  const Elf64_Rela *reloc,
 		  const Elf64_Sym *sym,
@@ -803,11 +803,12 @@
   MODIFIED_CODE_NOQUEUE (reloc_addr);
 }
 
-static inline void
+auto inline void __attribute__ ((always_inline))
 elf_machine_lazy_rel (struct link_map *map,
 		      Elf64_Addr l_addr, const Elf64_Rela *reloc)
 {
   /* elf_machine_runtime_setup handles this.  */
 }
 
+
 #endif /* RESOLVE */
